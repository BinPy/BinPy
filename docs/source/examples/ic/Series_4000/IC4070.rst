
Usage of IC 4070
----------------

.. code:: python

    from __future__ import print_function
    from BinPy import *
.. code:: python

    # Usage of IC 4070:
    
    ic = IC_4070()
    
    print(ic.__doc__)

.. parsed-literal::

    
        Quad 2 input XOR gate
        Pin_3 = XOR(Pin_1, Pin_2)
        Pin_4 = XOR(Pin_5, Pin_6)
        Pin_10 = XOR(Pin_8, Pin_9)
        Pin_11 = XOR(Pin_12, Pin_13)
        


.. code:: python

    # The Pin configuration is:
    
    inp = {2: 0, 3: 1, 4: 0, 5: 1, 7: 0, 9: 1, 10: 1, 11: 1, 12: 1, 14: 1}
    
    # Pin initinalization
    
    # Powering up the IC - using -- ic.set_IC({14: 1, 7: 0})
    
    ic.set_IC({14: 1, 7: 0})
    
    # Setting the inputs of the ic
    
    ic.set_IC(inp)
    
    # Draw the IC with the current configuration\n
    
    ic.draw_IC()

.. parsed-literal::

    
    
                  ┌─────────◡─────────┐
                  │                   │
     A1: [0]    ──┤  1            14  ├──    [1] VCC
                  │                   │
                  │                   │
     B1: [0]    ──┤  2      4     13  ├──    [0] A4:
                  │                   │
                  │                   │
     Q1: [1]    ──┤  3      0     12  ├──    [1] B4:
                  │                   │
                  │                   │
     Q2: [0]    ──┤  4      7     11  ├──    [1] Q4:
                  │                   │
                  │                   │
     B2: [1]    ──┤  5      0     10  ├──    [1] Q3:
                  │                   │
                  │                   │
     A2: [0]    ──┤  6             9  ├──    [1] B3:
                  │                   │
                  │                   │
     GND [0]    ──┤  7             8  ├──    [0] A3:
                  │                   │
                  └───────────────────┘  


.. code:: python

    # Run the IC with the current configuration using -- print ic.run() -- 
    
    # Note that the ic.run() returns a dict of pin configuration similar to 
    
    print (ic.run())

.. parsed-literal::

    {11: 1, 10: 1, 3: 0, 4: 1}


.. code:: python

    # Seting the outputs to the current IC configuration using -- ic.set_IC(ic.run()) --\n
    
    ic.set_IC(ic.run())
    
    # Draw the final configuration
    
    ic.draw_IC()

.. parsed-literal::

    
    
                  ┌─────────◡─────────┐
                  │                   │
     A1: [0]    ──┤  1            14  ├──    [1] VCC
                  │                   │
                  │                   │
     B1: [0]    ──┤  2      4     13  ├──    [0] A4:
                  │                   │
                  │                   │
     Q1: [0]    ──┤  3      0     12  ├──    [1] B4:
                  │                   │
                  │                   │
     Q2: [1]    ──┤  4      7     11  ├──    [1] Q4:
                  │                   │
                  │                   │
     B2: [1]    ──┤  5      0     10  ├──    [1] Q3:
                  │                   │
                  │                   │
     A2: [0]    ──┤  6             9  ├──    [1] B3:
                  │                   │
                  │                   │
     GND [0]    ──┤  7             8  ├──    [0] A3:
                  │                   │
                  └───────────────────┘  


.. code:: python

    # Seting the outputs to the current IC configuration using -- ic.set_IC(ic.run()) --
    
    ic.set_IC(ic.run())
    
    # Draw the final configuration
    
    ic.draw_IC()
    
    # Run the IC
    
    print (ic.run())

.. parsed-literal::

    
    
                  ┌─────────◡─────────┐
                  │                   │
     A1: [0]    ──┤  1            14  ├──    [1] VCC
                  │                   │
                  │                   │
     B1: [0]    ──┤  2      4     13  ├──    [0] A4:
                  │                   │
                  │                   │
     Q1: [0]    ──┤  3      0     12  ├──    [1] B4:
                  │                   │
                  │                   │
     Q2: [1]    ──┤  4      7     11  ├──    [1] Q4:
                  │                   │
                  │                   │
     B2: [1]    ──┤  5      0     10  ├──    [1] Q3:
                  │                   │
                  │                   │
     A2: [0]    ──┤  6             9  ├──    [1] B3:
                  │                   │
                  │                   │
     GND [0]    ──┤  7             8  ├──    [0] A3:
                  │                   │
                  └───────────────────┘  
    {11: 1, 10: 1, 3: 0, 4: 1}


.. code:: python

    # Connector Outputs
    c = Connector()
    
    # Set the output connector to a particular pin of the ic
    ic.set_Output(3, c)
    
    print(c)

.. parsed-literal::

    Connector; State: 0

