
Usage of IC 7430
----------------

.. code:: python

    from __future__ import print_function
    from BinPy import *
.. code:: python

    # Usage of IC 7430:
    
    ic = IC_7430()
    
    print(ic.__doc__)

.. parsed-literal::

    
        This is a 8-Input NAND Gate
        


.. code:: python

    # The Pin configuration is:
    
    inp = {1: 0, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 0, 11: 1, 12: 1, 14: 1}
    
    # Pin initinalization
    
    # Powering up the IC - using -- ic.setIC({14: 1, 7: 0})
    
    ic.set_IC({14: 1, 7: 0})
    
    # Setting the inputs of the ic
    
    ic.set_IC(inp)
    
    # Draw the IC with the current configuration\n
    
    ic.draw_IC()

.. parsed-literal::

    
    
                  ┌─────────◡─────────┐
                  │                   │
         [0]    ──┤  1            14  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  2      7     13  ├──    [0]    
                  │                   │
                  │                   │
         [1]    ──┤  3      4     12  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  4      3     11  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  5      0     10  ├──    [0]    
                  │                   │
                  │                   │
         [1]    ──┤  6             9  ├──    [0]    
                  │                   │
                  │                   │
         [0]    ──┤  7             8  ├──    [Z]    
                  │                   │
                  └───────────────────┘  


.. code:: python

    # Run the IC with the current configuration using -- print ic.run() -- 
    
    # Note that the ic.run() returns a dict of pin configuration similar to 
    
    print (ic.run())

.. parsed-literal::

    {8: 1}


.. code:: python

    # Seting the outputs to the current IC configuration using -- ic.setIC(ic.run()) --\n
    
    ic.set_IC(ic.run())
    
    # Draw the final configuration
    
    ic.draw_IC()

.. parsed-literal::

    
    
                  ┌─────────◡─────────┐
                  │                   │
         [0]    ──┤  1            14  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  2      7     13  ├──    [0]    
                  │                   │
                  │                   │
         [1]    ──┤  3      4     12  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  4      3     11  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  5      0     10  ├──    [0]    
                  │                   │
                  │                   │
         [1]    ──┤  6             9  ├──    [0]    
                  │                   │
                  │                   │
         [0]    ──┤  7             8  ├──    [1]    
                  │                   │
                  └───────────────────┘  


.. code:: python

    # Seting the outputs to the current IC configuration using -- ic.setIC(ic.run()) --
    
    ic.set_IC(ic.run())
    
    # Draw the final configuration
    
    ic.draw_IC()
    
    # Run the IC
    
    print (ic.run())

.. parsed-literal::

    
    
                  ┌─────────◡─────────┐
                  │                   │
         [0]    ──┤  1            14  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  2      7     13  ├──    [0]    
                  │                   │
                  │                   │
         [1]    ──┤  3      4     12  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  4      3     11  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  5      0     10  ├──    [0]    
                  │                   │
                  │                   │
         [1]    ──┤  6             9  ├──    [0]    
                  │                   │
                  │                   │
         [0]    ──┤  7             8  ├──    [1]    
                  │                   │
                  └───────────────────┘  
    {8: 1}


.. code:: python

    # Connector Outputs
    c = Connector()
    
    # Set the output connector to a particular pin of the ic
    ic.set_Output(8, c)
    
    print(c)

.. parsed-literal::

    Connector; State: 1

